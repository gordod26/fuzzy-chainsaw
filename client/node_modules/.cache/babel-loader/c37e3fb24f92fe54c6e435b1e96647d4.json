{"ast":null,"code":"import { makeAutoObservable, toJS } from \"mobx\";\nexport default class RefStore {\n  constructor() {\n    this.yellowVerses = [];\n    this.postInput = \"\";\n    this.formattedSelection = \"\";\n    makeAutoObservable(this);\n  } //selected verse\n\n\n  logVerse(e) {\n    console.log(\"RefStore\", \"logVerse\", e);\n  } // push or remove verse from selected verse\n\n\n  yellowVersesHandler(book, chapter, verse) {\n    const obj = {\n      book: book,\n      chapter: chapter,\n      verse: verse\n    };\n    const index = this.yellowVerses.findIndex(item => item.book === obj.book && item.chapter === obj.chapter && item.verse === obj.verse);\n    this.yellowVerses.some(item => item.book === obj.book && item.chapter === obj.chapter && item.verse === obj.verse) ? this.yellowVerses.splice(index, 1) : this.yellowVerses.push(obj); //this.yellowVerses.push({ book: book, chapter: chapter, verse: verse });\n\n    console.log(\"RefStore\", \"yellowVersesHandler\", toJS(this.yellowVerses));\n    this.refFormatHandler();\n  }\n\n  postInputHandler(e) {\n    this.postInput = `${this.formattedSelection}${e.target.value}`;\n    console.log(\"Refstore\", \"postInputHandler\", toJS(this.postInput));\n  }\n\n  refFormatHandler() {\n    const a = this.yellowVerses;\n\n    const formatted = function formatWithRanges() {\n      const vArr = a.map(i => Number(i.verse)).sort((a, b) => {\n        return a - b;\n      });\n      let res = [],\n          last = null;\n\n      for (let x of vArr) {\n        if (last && last[1] + 1 === x) last[1]++;else res.push(last = [x, x]);\n      }\n\n      return res.map(r => r[0] === r[1] ? r[0] : r[0] + \"-\" + r[1]).join(\",\");\n    };\n\n    const fullFormat = typeof a[0] === \"undefined\" ? \"\" : `${a[0].book.slice(0, 3)} ${a[0].chapter}:${formatted()}`;\n    return fullFormat;\n  }\n\n}","map":{"version":3,"sources":["/home/david/src/bible_talk_live/src/mobx/RefStore.tsx"],"names":["makeAutoObservable","toJS","RefStore","constructor","yellowVerses","postInput","formattedSelection","logVerse","e","console","log","yellowVersesHandler","book","chapter","verse","obj","index","findIndex","item","some","splice","push","refFormatHandler","postInputHandler","target","value","a","formatted","formatWithRanges","vArr","map","i","Number","sort","b","res","last","x","r","join","fullFormat","slice"],"mappings":"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","sourcesContent":["import { makeAutoObservable, toJS } from \"mobx\";\nimport { parse } from \"path\";\nimport { ChangeEvent } from \"react\";\n\ninterface IRefStore {}\n\nexport default class RefStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  //selected verse\n  yellowVerses: any[] = [];\n  postInput: string = \"\";\n  formattedSelection = \"\";\n\n  logVerse(e: any) {\n    console.log(\"RefStore\", \"logVerse\", e);\n  }\n  // push or remove verse from selected verse\n  yellowVersesHandler(book: string, chapter: string, verse: string) {\n    const obj = { book: book, chapter: chapter, verse: verse };\n    const index = this.yellowVerses.findIndex(\n      (item) =>\n        item.book === obj.book &&\n        item.chapter === obj.chapter &&\n        item.verse === obj.verse\n    );\n    this.yellowVerses.some(\n      (item) =>\n        item.book === obj.book &&\n        item.chapter === obj.chapter &&\n        item.verse === obj.verse\n    )\n      ? this.yellowVerses.splice(index, 1)\n      : this.yellowVerses.push(obj);\n    //this.yellowVerses.push({ book: book, chapter: chapter, verse: verse });\n    console.log(\"RefStore\", \"yellowVersesHandler\", toJS(this.yellowVerses));\n    this.refFormatHandler();\n  }\n\n  postInputHandler(e: ChangeEvent<HTMLTextAreaElement>) {\n    this.postInput = `${this.formattedSelection}${e.target.value}`;\n    console.log(\"Refstore\", \"postInputHandler\", toJS(this.postInput));\n  }\n\n  refFormatHandler() {\n    const a = this.yellowVerses;\n    const formatted = function formatWithRanges() {\n      const vArr = a\n        .map((i) => Number(i.verse))\n        .sort((a, b) => {\n          return a - b;\n        });\n\n      let res = [],\n        last = null;\n\n      for (let x of vArr) {\n        if (last && last[1] + 1 === x) last[1]++;\n        else res.push((last = [x, x]));\n      }\n\n      return res\n        .map((r) => (r[0] === r[1] ? r[0] : r[0] + \"-\" + r[1]))\n        .join(\",\");\n    };\n    const fullFormat =\n      typeof a[0] === \"undefined\"\n        ? \"\"\n        : `${a[0].book.slice(0, 3)} ${a[0].chapter}:${formatted()}`;\n    return fullFormat;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}